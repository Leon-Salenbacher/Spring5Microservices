spring:
  cloud:
    # Disable configuration server for testing
    config:
      enabled: false
  datasource:
    url: jdbc:postgresql://localhost:5432/microservice_test
    username: microservice_test
    password: microservice_test
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: false
        jdbc:
          lob:
            # With Java >= 9, to avoid:
            # SQLFeatureNotSupportedException: Method PgConnection.createClob() is not yet implemented
            non_contextual_creation: true
        # To include custom functions we want to use in HQL queries
        metadata_builder_contributor: com.pizza.configuration.persistence.SqlFunctionsMetadataBuilderContributor
        show_sql: false

# Disable eureka server connection request for testing
eureka:
  client:
    enabled: false

security:
  restApi:
    authenticationInformation: OnlyToAvoidAFailureLoadingConfigurationClass
    clientId: TestClient
    clientPassword: TestPassword

rest:
  connect:
    timeoutInMilliseconds: 5000
  read:
    timeoutInMilliseconds: 5000
  response:
    timeoutInMilliseconds: 5000
  write:
    timeoutInMilliseconds: 5000

cache:
  userBlacklist:
    entryCapacity: 2
    expireInSeconds: 10
    name: OnlyToAvoidAFailureLoadingConfigurationClass

springdoc:
  api-docs:
    path: onlyForTests
  documentation:
    apiVersion: 1.0
    title: Test Rest Api
    description: Test description
  security:
    authorization: Bearer Auth
    schema: bearer
    format: JWT
  swagger-ui:
    path: testPath
  webjars:
    prefix: testPrefix

#show sql statement
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: debug
#        type:
#          descriptor:
#            sql: trace
